{"version":3,"file":"static/js/944.d0646b19.chunk.js","mappings":"2KAwIA,QAnIA,SAAeA,GACX,MAAOC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,KACtCC,EAAYC,IAAiBF,EAAAA,EAAAA,UAAS,KACtCG,EAAYC,IAAiBJ,EAAAA,EAAAA,UAAS,KACtCK,EAAgBC,IAAqBN,EAAAA,EAAAA,UAAS,QAC9CO,EAAcC,IAAmBR,EAAAA,EAAAA,UAAS,CAACS,QAAS,GAAIC,QAAS,GAAIC,SAAU,KAChFC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,KCXcC,iBACNC,EAAAA,EAAMC,IAAI,oBACjBC,KDUPC,GAAeC,MAAKF,IAChBnB,EAAcmB,GACdG,EAAWH,EAAMf,EAAYE,EAAe,GAC9C,GACH,CAACF,EAAYE,IAGhB,MAgBMgB,EAAaA,CAACH,EAAMI,EAAQC,KAC9B,IAAId,EAAU,GACVC,EAAU,GACVC,EAAW,GAEf,IAAK,IAAIa,KAAON,EAAM,CAClB,MAAMO,EAAYP,EAAKM,GAAKD,OAExBE,EAAUC,WAAW,SACrBR,EAAKM,GAAKG,YAAYC,cAAcC,SAASP,KACjC,QAAXC,GAA+B,QAAXA,GAErBd,EAAQqB,KAAKZ,EAAKM,IAElBC,EAAUC,WAAW,SACrBR,EAAKM,GAAKG,YAAYC,cAAcC,SAASP,KACjC,QAAXC,GAA+B,QAAXA,GAErBb,EAAQoB,KAAKZ,EAAKM,KAElBN,EAAKM,GAAKG,YAAYC,cAAcC,SAASP,IACjC,QAAXC,GAA+B,SAAXA,GAErBZ,EAASmB,KAAKZ,EAAKM,GAE3B,CACAhB,EAAgB,CAACC,UAASC,UAASC,YAAU,EAGjD,OACIoB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EAEID,EAAAA,EAAAA,MAAA,OAAKE,UAAU,qBAAoBD,SAAA,EAC/BD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIE,EAAAA,EAAAA,KAAA,UAAQC,QAASA,KArC7BvB,EAAS,cAqCsC,eAAgB,EAAAoB,SAAC,cACpDE,EAAAA,EAAAA,KAAA,UAAQC,QAASA,IAAMC,MAAM,qBAAqBJ,SAAC,cACnDE,EAAAA,EAAAA,KAAA,UAAQC,QAASA,IAAMC,MAAM,qBAAqBJ,SAAC,iBAEvDD,EAAAA,EAAAA,MAAA,OAAKM,MAAO,CAACC,QAAS,OAAQC,WAAY,UAAUP,SAAA,EAChDE,EAAAA,EAAAA,KAAA,SACIM,KAAK,OACLC,YAAY,2BACZC,MAAOvC,EACPwC,SA3DEC,IAClB,MAAMtB,EAASsB,EAAEC,OAAOH,MAAMd,cAC9BxB,EAAckB,GACdD,EAAWvB,EAAYwB,EAAQjB,EAAe,KA2DlC0B,EAAAA,EAAAA,MAAA,UAAQW,MAAOrC,EAAgBsC,SAxDnBC,IACxB,MAAMrB,EAASqB,EAAEC,OAAOH,MACxBpC,EAAkBiB,GAClBF,EAAWvB,EAAYK,EAAYoB,EAAO,EAqD8BS,SAAA,EACxDE,EAAAA,EAAAA,KAAA,UAAQQ,MAAM,MAAKV,SAAC,iBACpBE,EAAAA,EAAAA,KAAA,UAAQQ,MAAM,MAAKV,SAAC,gBACpBE,EAAAA,EAAAA,KAAA,UAAQQ,MAAM,MAAKV,SAAC,gBACpBE,EAAAA,EAAAA,KAAA,UAAQQ,MAAM,OAAMV,SAAC,0BAKjCD,EAAAA,EAAAA,MAAA,OAAKE,UAAU,eAAcD,SAAA,EAEzBD,EAAAA,EAAAA,MAAA,OAAKE,UAAU,cAAaD,SAAA,EACxBD,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CAAI,gBAAczB,EAAaE,QAAQqC,OAAO,mBAC7CvC,EAAaE,QAAQsC,KAAI,CAACC,EAAMC,KAC7BlB,EAAAA,EAAAA,MAAA,OAAiBE,UAAU,cAAaD,SAAA,EACpCD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CAAMgB,EAAKrB,YAAY,KAAGqB,EAAKE,aAAa,QAC5ChB,EAAAA,EAAAA,KAAA,OAAAF,SAAMgB,EAAKzB,UACXQ,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CAAMgB,EAAKG,MAAM,SAHXF,SAUlBlB,EAAAA,EAAAA,MAAA,OAAKE,UAAU,cAAaD,SAAA,EACxBD,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CAAI,gBAAczB,EAAaG,QAAQoC,OAAO,mBAC7CvC,EAAaG,QAAQqC,KAAI,CAACC,EAAMC,KAC7BlB,EAAAA,EAAAA,MAAA,OAAiBE,UAAU,cAAaD,SAAA,EACpCD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CAAMgB,EAAKrB,YAAY,KAAGqB,EAAKE,aAAa,QAC5ChB,EAAAA,EAAAA,KAAA,OAAAF,SAAMgB,EAAKzB,UACXQ,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CAAMgB,EAAKG,MAAM,SAHXF,SAUlBlB,EAAAA,EAAAA,MAAA,OAAKE,UAAU,cAAaD,SAAA,EACxBD,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CAAI,iBAAezB,EAAaI,SAASmC,OAAO,mBAC/CvC,EAAaI,SAASoC,KAAI,CAACC,EAAMC,KAC9BlB,EAAAA,EAAAA,MAAA,OAAiBE,UAAU,cAAaD,SAAA,EACpCD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CAAMgB,EAAKrB,YAAY,KAAGqB,EAAKE,aAAa,QAC5ChB,EAAAA,EAAAA,KAAA,OAAAF,SAAMgB,EAAKzB,UACXQ,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CAAMgB,EAAKG,MAAM,SAHXF,aAWlC,C","sources":["pages/API_1.js","api/Api.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {getUpbitList, fetchAndSync} from \"../api/Api\";\r\nimport '../layouts/css/API_1.css';\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\nfunction API_1(props) {\r\n    const [serverData, setServerData] = useState('');\r\n    const [synchroniz, setSynchroniz] = useState('');\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [selectedMarket, setSelectedMarket] = useState('all'); // 필터 상태 추가\r\n    const [filteredData, setFilteredData] = useState({krwList: [], btcList: [], usdtList: []});\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        getUpbitList().then(data => {\r\n            setServerData(data);\r\n            filterData(data, searchTerm, selectedMarket);\r\n        });\r\n    }, [searchTerm, selectedMarket]); // 검색어와 필터가 변경될 때마다 실행\r\n\r\n\r\n    const handleSearch = (e) => {\r\n        const search = e.target.value.toLowerCase();\r\n        setSearchTerm(search);\r\n        filterData(serverData, search, selectedMarket);\r\n    };\r\n\r\n    const handleMarketFilter = (e) => {\r\n        const market = e.target.value;\r\n        setSelectedMarket(market);\r\n        filterData(serverData, searchTerm, market);\r\n    };\r\n\r\n    const handleClick = (param) => {\r\n        navigate(\"/api/upbit/\" + param);\r\n    };\r\n\r\n    const filterData = (data, search, market) => {\r\n        let krwList = [];\r\n        let btcList = [];\r\n        let usdtList = [];\r\n\r\n        for (let key in data) {\r\n            const marketKey = data[key].market;\r\n            if (\r\n                marketKey.startsWith(\"KRW-\") &&\r\n                data[key].korean_name.toLowerCase().includes(search) &&\r\n                (market === 'all' || market === 'krw')\r\n            ) {\r\n                krwList.push(data[key]);\r\n            } else if (\r\n                marketKey.startsWith(\"BTC-\") &&\r\n                data[key].korean_name.toLowerCase().includes(search) &&\r\n                (market === 'all' || market === 'btc')\r\n            ) {\r\n                btcList.push(data[key]);\r\n            } else if (\r\n                data[key].korean_name.toLowerCase().includes(search) &&\r\n                (market === 'all' || market === 'usdt')\r\n            ) {\r\n                usdtList.push(data[key]);\r\n            }\r\n        }\r\n        setFilteredData({krwList, btcList, usdtList});\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {/* 상단 버튼 및 검색바, 필터 */}\r\n            <div className=\"search-and-buttons\">\r\n                <div>\r\n                    <button onClick={() => handleClick('fetchAndSync')}>Button 1</button>\r\n                    <button onClick={() => alert(\"Button 2 Clicked!\")}>Button 2</button>\r\n                    <button onClick={() => alert(\"Button 3 Clicked!\")}>Button 3</button>\r\n                </div>\r\n                <div style={{display: 'flex', alignItems: 'center'}}>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Search by Korean Name...\"\r\n                        value={searchTerm}\r\n                        onChange={handleSearch}\r\n                    />\r\n                    {/* 필터 추가 */}\r\n                    <select value={selectedMarket} onChange={handleMarketFilter}>\r\n                        <option value=\"all\">All Markets</option>\r\n                        <option value=\"krw\">KRW Market</option>\r\n                        <option value=\"btc\">BTC Market</option>\r\n                        <option value=\"usdt\">USDT Market</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"market-lists\">\r\n                {/* KRW List (좌측) */}\r\n                <div className=\"market-list\">\r\n                    <h3>KRW Market : {filteredData.krwList.length} 항목</h3>\r\n                    {filteredData.krwList.map((item, index) => (\r\n                        <div key={index} className=\"market-item\">\r\n                            <div>{item.korean_name} ({item.english_name})</div>\r\n                            <div>{item.market}</div>\r\n                            <div>{item.price} </div>\r\n                            {/* 가격 칸 추가 */}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                {/* BTC List (중앙) */}\r\n                <div className=\"market-list\">\r\n                    <h3>BTC Market : {filteredData.btcList.length} 항목</h3>\r\n                    {filteredData.btcList.map((item, index) => (\r\n                        <div key={index} className=\"market-item\">\r\n                            <div>{item.korean_name} ({item.english_name})</div>\r\n                            <div>{item.market}</div>\r\n                            <div>{item.price} </div>\r\n                            {/* 가격 칸 추가 */}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                {/* USDT List (우측) */}\r\n                <div className=\"market-list\">\r\n                    <h3>USDT Market : {filteredData.usdtList.length} 항목</h3>\r\n                    {filteredData.usdtList.map((item, index) => (\r\n                        <div key={index} className=\"market-item\">\r\n                            <div>{item.korean_name} ({item.english_name})</div>\r\n                            <div>{item.market}</div>\r\n                            <div>{item.price} </div>\r\n                            {/* 가격 칸 추가 */}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default API_1;\r\n","import axios from \"axios\"\r\n\r\nexport const getUpbitList = async () => {\r\n    const res = await axios.get(`/api/upbit/list`)\r\n    return res.data\r\n}\r\n\r\nexport const fetchAndSync = async () => {\r\n    const res = await axios.get(`/api/upbit/fetchAndSync`)\r\n    return res.data\r\n}\r\n\r\n\r\n\r\n"],"names":["props","serverData","setServerData","useState","synchroniz","setSynchroniz","searchTerm","setSearchTerm","selectedMarket","setSelectedMarket","filteredData","setFilteredData","krwList","btcList","usdtList","navigate","useNavigate","useEffect","async","axios","get","data","getUpbitList","then","filterData","search","market","key","marketKey","startsWith","korean_name","toLowerCase","includes","push","_jsxs","children","className","_jsx","onClick","alert","style","display","alignItems","type","placeholder","value","onChange","e","target","length","map","item","index","english_name","price"],"sourceRoot":""}